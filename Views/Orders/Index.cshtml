@model IEnumerable<EBookStore.Site.Models.Infra.OrdersItemDapperVM>

@{
    ViewBag.Title = "Index";

    var categories = ViewBag.OrderStatusId as SelectList;
    var criteria = ViewBag.Criteria as EBookStore.Site.Models.ViewModels.ProductCriteria;
    string s_OrderId = criteria.OrderId.HasValue ? criteria.OrderId.Value.ToString() : "";

}
@section cdn{
    <link href="https://cdn.bootcss.com/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
}

@section Style
{
    <style>
        .fixed-cell {
            /*width: 200px;*/ /* 根據需要調整固定寬度 */
            white-space: nowrap;
            /*        overflow: hidden;
        text-overflow: ellipsis;*/
        }

        .text-left {
            text-align: left;
        }

        .text-right {
            text-align: right;
        }

        .dataTables_filter input[type="search"] {
            background-color: white;
        }

        div.dataTables_wrapper .dataTables_length select {
            background-color: white;
        }

        .paid-row {
            background-color: lightgreen !important;
            color: black !important;
        }

        .cancelled-row {
            background-color: lightgrey !important;
            color: black !important;
        }

        .AlreadyPaid-row {
            background-color: lightblue !important;
            color: black !important;
        }

        .badge {
            font-size: 16px;
            /*            justify-content: center;
            align-items: center;*/
            margin: 4px 0 auto 0;
        }
    </style>

}

@*<h2>Index</h2>

    <p>
        @Html.ActionLink("新增", "Create")
    </p>*@

<section class="container">
    <form method="get">
        <div class="row">
            <div class="col-md-12 d-flex justify-content-center">
                <div class="mb-3 col-md-k3">
                    <label for="s_categoryId">訂單狀態</label>
                    <select name="OrderId" id="s_categoryId" class="form-select form-control">
                        <option value="">全部</option>
                        @foreach (var item in categories)
                        {
                            <option value="@item.Value" @(s_OrderId == item.Value ? "selected" : "")>@item.Text</option>
                        }
                    </select>
                </div>

                <div class="mb-3 col-md-3">
                    <label for="s_name">帳號</label>
                    <input type="text" class="form-control" name="Name" id="s_name" value="@criteria.Name">
                </div>

                <div class="mb-3 col-md-3" id="Date">
                    <label for="s_date_start">日期:(起)</label>
                    <input type="text" class="form-control" name="date_start" id="s_date_start" value="@criteria.Date_Start">
                </div>

                <div class="mb-3 col-md-3" id="Date">
                    <label for="s_date_end">日期:(迄)</label>
                    <input type="text" class="form-control" name="date_end" id="s_date_end" value="@criteria.Date_End">
                </div>


                <div class="mb-3 col-md-2 align-self-end">
                    <button class="btn btn-primary">Search</button>
                </div>

            </div>
        </div>
    </form>
</section>

<div style="overflow-y: scroll; ">
    <table id="orderTable" class="table fixed-cell">
        @*table-hover table-striped*@
        <thead>
            <tr>
                <th>

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderStatusesName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShippingStatusesName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Account)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiverName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiverAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiverPhone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Remark)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderTime)
                </th>
                <th class="text-right">
                    @Html.DisplayNameFor(model => model.TotalAmount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShippingNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShippingTime)
                </th>
                <th class="text-right">
                    @Html.DisplayNameFor(model => model.ShippingFee)
                </th>
                <th class="text-right">
                    @Html.DisplayNameFor(model => model.TotalPayment)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="@(item.OrderStatusesName == "已完成" ? "paid-row" : (item.OrderStatusesName == "已取消" ? "cancelled-row" : (item.OrderStatusesName == "已付款" ? "AlreadyPaid-row" : "")))">
                    <td class="badge bg-dark ">
                        @Html.ActionLink("訂單明細", "OrderItemDetails", new { orderId = item.OrdersId }, new { @class = "text-white" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.OrderStatusesName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShippingStatusesName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Account)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReceiverName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReceiverAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReceiverPhone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Remark)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderTime)
                    </td>
                    <td class="text-right">
                        @Html.DisplayFor(modelItem => item.FormattedTotalAmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShippingNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShippingTime)
                    </td>
                    <td class="text-right">
                        @Html.DisplayFor(modelItem => item.FormattedShippingFee)
                    </td>
                    <td class="text-right">
                        @Html.DisplayFor(modelItem => item.FormattedTotalPayment)
                    </td>
                    <td>
                        @Html.ActionLink("編輯", "Edit", new { id = item.Id }, new { @class = "btn btn-warning " }) |
                        <button class="deleteButton btn btn-danger" data-orderId="@item.Id">刪除</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section scripts {
    <script src="https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://cdn.bootcss.com/moment.js/2.18.1/moment-with-locales.min.js"></script>
    <script src="https://cdn.bootcss.com/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css" />
    <script type="text/javascript" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            $('#orderTable').DataTable({
                /*                pageLength: 3,*/
                order: [[9, 'desc']],
                language: {
                    "searchPlaceholder": "關鍵字搜尋",
                    "emptyTable": "無資料...",
                    "processing": "處理中...",
                    "loadingRecords": "載入中...",
                    "lengthMenu": "每頁 _MENU_ 筆資料",
                    "zeroRecords": "無搜尋結果",
                    "info": "_START_ 至 _END_ / 共 _TOTAL_ 筆",
                    "infoEmpty": "尚無資料",
                    "infoFiltered": "(從 _MAX_ 筆資料過濾)",
                    "infoPostFix": "",
                    "search": "搜尋字串:",
                    "paginate": {
                        "first": "首頁",
                        "last": "末頁",
                        "next": "下頁",
                        "previous": "前頁"
                    },
                    "aria": {
                        "sortAscending": ": 升冪",
                        "sortDescending": ": 降冪"
                    }
                },
            });


            $(".deleteButton").click(function (event) {
                event.preventDefault();
                var orderId = $(this).data('orderid'); // 獲取訂單ID

                // 顯示SweetAlert的確認對話框
                Swal.fire({
                    title: '確認',
                    text: '確定刪除整筆訂單？',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: '確定',
                    cancelButtonText: '取消'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // 獲取防偽權杖的值
                        var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();
                        //// 創建 FormData 物件
                        //var formData = new FormData();
                        //var formData2 = new FormData();
                        //formData2.append('__RequestVerificationToken', antiForgeryToken);
                        //formData.append('id', orderId);

                        $.ajax({
                            url: "/Orders/Delete2",
                            type: "POST",

                            data: { id: orderId },
                            success: function (result) {
                                // 成功處理後的操作，例如重新導向或顯示訊息
                                location.href = "/Orders";
                            },
                            error: function () {
                                // 錯誤處理，例如顯示錯誤訊息
                                Swal.fire('錯誤', '發生未知的錯誤！', 'error');
                            }
                        });
                    }
                });
            });
        });

        //$('#Date_Start').datetimepicker({
        //    date: null, //一開始輸入框的日期為空
        //    format: 'YYYY/MM/DD', //日期的顯示格式
        //    locale: moment.locale('zh-tw'), //國別
        //   /* daysOfWeekDisabled: [0, 6],*/ //隱藏的天數0為周日6為星期六
        //    minDate: moment().add(1, 'days'), //顯示最小天數
        //    maxDate: moment().add(30, 'days'), //顯示最大天數，30為最大的顯示範圍為一個月為限
        //    //disabledDates:
        //    //    [ //隱藏的日期
        //    //        moment().add(1, 'days'), //前一日
        //    //        moment().add(2, 'days'), //前二日
        //    //        '2021-10-10', //特別日期
        //    //        '2021-12-25'
        //    //    ]
        //});

        const date = document.querySelectorAll('#Date .form-control');

        date.forEach(function (dt) {
            $(dt).datetimepicker({
                date: dt.value?.split(' ')[0], //一開始輸入框的日期為空
                format: 'YYYY/MM/DD', //日期的顯示格式
                locale: moment.locale('zh-tw'), //國別
                /* daysOfWeekDisabled: [0, 6],*/ //隱藏的天數0為周日6為星期六
                //minDate: moment().add(1, 'days'), //顯示最小天數
                //maxDate: moment().add(30, 'days'), //顯示最大天數，30為最大的顯示範圍為一個月為限
                //disabledDates:
                //    [ //隱藏的日期
                //        moment().add(1, 'days'), //前一日
                //        moment().add(2, 'days'), //前二日
                //        '2021-10-10', //特別日期
                //        '2021-12-25'
                //    ]
            });
        })





    </script>
}