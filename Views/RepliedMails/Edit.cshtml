@model EBookStore.Site.Models.ViewModels.RepliedMailEditVM

@{
	ViewBag.Title = "Edit";
	var csId = Model.CSId;
}
@section cdn{
	<link href="~/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">
}
@section Style
{
	<style>
        .container-fluid {
            font-family: DFYuanBold-B5;
        }
        h2 {
            color: #696969;
        }
	</style>
}


@using (Html.BeginForm())
{

	@Html.AntiForgeryToken()

<div class="container-fluid" style="width:500px">
	<h2 class="text-center">修改信件</h2>
	<hr />
	<div class="form-group">
		<!-- Button trigger modal -->
		<button type="button" class="detail btn btn-sm btn-outline-info" data-bs-toggle="modal" data-bs-target="#exampleModal" data-id="@csId">
			檢視問題內容
		</button>
	</div>

	<!-- Modal -->
	<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h3 class="modal-title text-primary" id="exampleModalLabel">問題內容</h3>
				</div>
				<div class="modal-body">

                    <form>
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserAccount, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.UserAccount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProblemTypeName, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.ProblemTypeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProblemStatement, htmlAttributes: new { @class = "form-label" })
                            @Html.TextAreaFor(model => model.ProblemStatement, new { @class = "form-control", @rows = 5, @readonly = "readonly", @disabled = "disabled" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProblemCreatedTime, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.ProblemCreatedTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                        </div>
                    </form>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
				</div>
			</div>
		</div>
	</div>

    <form action="/RepliedMails/Edit" method="POST">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        <div class="row row-cols-1">
            <div class="form-group">
                @Html.LabelFor(model => model.UserAccount, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.UserAccount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.UserAccount, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "form-label" })
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @rows = 5 })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>

            <div class="form-group text-center">
                <input type="hidden" name="deleteId" />
                <button class="btn btn-primary save" type="submit">
                    存檔並重寄
                </button>
            </div>
        </div>
    </form>
</div>
	}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.12/dist/sweetalert2.all.min.js"></script>

    <script>
		var basement = "https://localhost:44314";

		$(function () {
		});

    </script>
}
