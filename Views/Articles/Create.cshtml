@model EBookStore.Site.Models.ViewModels.ArticleCreateVm

@{
    ViewBag.Title = "新增專欄";
    //var writerList = ViewBag.WriterList as List<EBookStore.Site.Models.ViewModels.WriterIndexVm>;

}


<style>
    .form-label {
        padding: 0px;
        padding-left: 48px;
        width: 130px;
        margin-right: 0px;
        margin-top: 5px;
    }

   

    .container {
       
        display: flex;
        /*border: 1px solid green;*/
        margin-left: 0px
    }

    .left-column {
        width:62%;
        /*border:1px solid red;*/
    }

    .right-column {
        width:38%;
        /*border: 1px solid green;*/
        margin-left:0px
    }


    .dontDisplay{
        display:none;

    }

  

    
</style>

<div style="margin-left:38px">
    <h2>新增專欄</h2>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="container">
    <div class="left-column">
      
            <!-- 左欄內容 -->
            <div class="row mb-3">

                <label class="form-label" for="@Html.NameFor(model => model.BookId)">@Html.DisplayNameFor(model => model.BookId)</label>
                @Html.DropDownList("BookId", null, htmlAttributes: new { @class = "form-control", style = "width: 500px;" })
                @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })
            </div>

            <div class="row mb-3">

                <label class="form-label" for="@Html.NameFor(model => model.WriterId)">@Html.DisplayNameFor(model => model.WriterId)</label>
                @*@Html.DropDownList("WriterId", null, htmlAttributes: new { @class = "form-control", style = "width: 500px;" })*@
                @*@Html.EditorFor(model => model.WriterId, new { htmlAttributes = new { @class = "form-control", style = "width: 500px;" } })*@
                <input type="hidden" name="WriterId" id="writerId" />
                <input type="text" class="form-control" name="WriterName" id="writerName" style="width:500px"/>

                @Html.ValidationMessageFor(model => model.WriterId, "", new { @class = "text-danger" })
            </div>

            <div class="row mb-3">

                <label class="form-label" for="@Html.NameFor(model => model.Title)">@Html.DisplayNameFor(model => model.Title)</label>


                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", style = "width: 500px;" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="row mb-3">

                <label class="form-label" for="@Html.NameFor(model => model.Content)">@Html.DisplayNameFor(model => model.Content)</label>

                @Html.TextAreaFor(model => model.Content, new { @class = "form-control", style = "width:  500px; max-width: 100%; max-height:300px; overflow-y: auto;", rows = "18", cols = "50" })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>



            <div class="row mb-3">

                <label class="form-label" for="@Html.NameFor(model => model.Status)">@Html.DisplayNameFor(model => model.Status)</label>
                <div class="form-check">
                    @Html.EditorFor(model => model.Status)
                    <label id="statusLabel" style="margin-top:2px;"></label>
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">

                <label class="form-label" for="@Html.NameFor(model => model.CreatedTime)">@Html.DisplayNameFor(model => model.CreatedTime)</label>
                @Html.TextBoxFor(model => model.CreatedTime, "{0:yyyy-MM-dd}", new { @class = "form-control", style = "width: 160px;", type = "date" })
                @*@Html.ValidationMessageFor(model => model.CreatedTime, "", new { @class = "text-danger" })*@
            </div>

            <div class="row mb-3" style="margin-left:450px">
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary" style="margin-right:20px">返回清單</a>
                <input type="submit" value="新增" class="btn btn-outline-primary" />
            </div>
        
    </div>

    <!-- 右欄內容 -->
    <div class="right-column">
        <form id="rightForm" class="">
                <div class="mt-3">


                    <table class="table">
                        <tr>
                            <th style="width:80px; padding-top:15px;">
                                <span style="margin-top:5px">姓名</span>
                            </th>
                            <th style="width:150px">
                                <input type="text" class="searchWriter form-control" id="searchWriter" style="height:30px"  />
                            </th>
                            <th style="width:200px">
                                <button class="btn btn-sm btn-outline-secondary btnSearchWriter"> 搜尋 </button>
                            </th>

                        </tr>

                        <tr>

                            <th>
                                <label>編號</label>
                            </th>
                            <th>
                                <label>姓名</label>
                            </th>
                            <th>
                                <label>信箱</label>
                            </th>
                          
                        </tr>


                      

                        <tbody id="writerListBody"></tbody>

                    </table>
                </div>
           
        </form>
    </div>
</div>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

       

        $(function () {

            var statusCheckbox = document.getElementById("Status");
            var statusLabel = document.getElementById("statusLabel");
            if (this.checked) {
                statusLabel.innerHTML = "發布";
            } else {
                statusLabel.innerHTML = "不發布";
            }

            statusCheckbox.addEventListener("change", function () {
                if (this.checked) {
                    statusLabel.innerHTML = "發布";
                } else {
                    statusLabel.innerHTML = "不發布";
                }
            });




            $(".btnSearchWriter").each(function () {


                $(this).on("click", function () {
                  
                    var searchWriterInput = $(this).parent().parent().find('#searchWriter').val();

                    $.ajax({
                        url: "/Articles/WriterIndex",
                        type: "GET",
                        data: { writerName: searchWriterInput },
                        success: function (result) {
                            $("#writerListBody").html(result);
                            $('.writer').each(function () {

                                $(this).on("click", function () {
                                    var writerId = $(this).attr("data-id");
                                    var writerName = $(this).attr("data-name");
                                    $('#writerName').val(writerName);
                                    $('#writerId').val(writerId);
                                    $(".right-column").addClass("dontDisplay");

                                })
                            })
                          


                        },
                        error: function (xhr, status, error) {
                            console.log(error);
                        }
                    });

                

                })


               

            })

           
           

        })


    </script>
}